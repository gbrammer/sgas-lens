def preprocess():
    """
    Drizzle and align the other bands
    """
    
    # In Prep
    
    import grizli
    import grizli.prep
    
    import os
    
    import glob
    import numpy as np
    import sgas
    
    # Grism exposures
    files=glob.glob('../RAW/id6*_flt.fits')
    visits, filters = grizli.utils.parse_flt_files(files=files, uniquename=True, get_footprint=True)
    
    N = len(visits)//2
    groups = []
    for i in range(N):
        group = {'direct':visits[i]} #, 'grism':visits[i+N]}
        key = '-'.join(visits[i]['product'].split('-')[:-1])
        for j in range(N):
            gr = visits[j+N]
            if gr['product'].startswith(key):
                group['grism'] = gr
                
        groups.append(group)
        
    # Alignment list, generated by GBr
    radec = os.path.join(sgas.get_data_path(), 'sdssj0851+3331-f160w.radec')
    
    Skip=True
    
    # This main loop does all of the alignment and background subtraction
    for i in range(len(groups)):
        direct = groups[i]['direct']
        grism = groups[i]['grism']
        print(direct['product'], grism['product'])
                
        print('RADEC:', radec)

        if os.path.exists(direct['product']+'_drz_sci.fits') & Skip:
            continue
            
        # (if you want to run just imaging, say from FFs, use "grism={}")
        status = grizli.prep.process_direct_grism_visit(direct=direct,
                                        grism=grism, radec=radec,
                                        skip_direct=False,
                                        align_mag_limits=[14,23])
        
    # Make both images have the same pixel grid
    visits[1]['reference'] = 'sdssj0851+3331-c2i-06-293.0-f125w_drz_sci.fits'
    
    # Drizzle them, North-up and with 0.06" pixels
    grizli.prep.drizzle_overlaps(visits, parse_visits=False, pixfrac=0.8, scale=0.06, skysub=False, final_wht_type='IVM', check_overlaps=False)

